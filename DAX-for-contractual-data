//-------------------- t1_contractual
let
    Source = Excel.Workbook(File.Contents("<full-path>\2022m07d10-B1-contractual.xlsx"), null, true),
    Sheet1_Sheet = Source{[Item="Sheet1",Kind="Sheet"]}[Data],
    #"Promoted Headers" = Table.PromoteHeaders(Sheet1_Sheet, [PromoteAllScalars=true]),
    #"Changed Type" = Table.TransformColumnTypes(#"Promoted Headers",{{"country", type text}, {"region", type text}, {"DOP", type text}, {"Unit ID", type text}, {"Unit size sqft", type number}, {"Unit location", type text}, {"Unit floor", type number}, {"Unit size XXL", type text}, {"Unit Type GSP", type text}, {"Unit price SGD", type number}, {"Tenant ID", type text}, {"Tenant BBC", type text}, {"Contract ID", type text}, {"lease start", type text}, {"lease end", type text}, {"monthly rent", type number}, {"lease start next", type text}, {"Contract ID next", type text}, {"LOS", type number}, {"LOD", type number}}),
    #"Filtered Rows" = Table.SelectRows(#"Changed Type", each [country] <> "abcd")
in
    #"Filtered Rows"
    
//-------------------- t2_temporal
let
    Source = Csv.Document(File.Contents("<full-path>\2022m07d10-B2-temporal.csv"),[Delimiter=",", Columns=21, Encoding=65001, QuoteStyle=QuoteStyle.None]),
    #"Promoted Headers" = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),
    #"Changed Type" = Table.TransformColumnTypes(#"Promoted Headers",{{"country", type text}, {"region", type text}, {"DOP", type text}, {"Unit ID", type text}, {"Unit size sqft", type number}, {"Unit price SGD", type number}, {"Unit location", type text}, {"Unit floor", type number}, {"Unit size XXL", type text}, {"Unit Type GSP", type text}, {"Tenant ID", type text}, {"Tenant BBC", type text}, {"Contract ID", type text}, {"lease start", type text}, {"lease end", type text}, {"monthly rent", type number}, {"LOS", type number}, {"LOD", type number}, {"time_ym", type text}, {"time_age", type number}, {"occupied", type number}}),
    #"Filtered Rows" = Table.SelectRows(#"Changed Type", each [country] <> "abcd")
in
    #"Filtered Rows"    
    
//-------------------- monthly lettable units (rental capacity)
//you can use the DOP of each unit / facility to imply the rental capacity
//then you can check the capacity against the occupancy numbers
monthly_lettable = 

var hp1 = selectcolumns(
    GROUPBY(x2_temporal, [time_y], [time_ym7])
    , "time_y", [time_y], "time_ym", [time_ym7])

var g1 = GROUPBY(
    SELECTCOLUMNS(x1_contractual, "unit ID", [Unit ID], "unit DOP", [DOP], "unit size", [Unit size sqft])
    , [Unit ID], [unit DOP], [unit size])

var g2 = GENERATEALL(hp1, (
    var ym1 = [time_ym]
    var curset = GROUPBY(FILTER(g1, left([unit DOP], 7)=ym1), [Unit ID], [Unit size])
    var c1 = COUNTAX(curset, [Unit ID])
    var s1 = sumx(curset, [Unit size])
    var row1 = row("added units", c1, "added area", s1) 
    return row1))

var g3 = GENERATEALL(g2, (
    var ym1 = [time_ym]
    var curset = FILTER(g2, [time_ym] <= ym1)
    var u1 = sumx(curset, [added units])
    var a1 = sumx(curset, [added area])
    var row1 = row("lettable units", u1, "lettable area", a1)
    return row1))

return g3
    

//-------------------- computing WALE and ALE
A1_WALE_basis = 

var wale_date = DATEVALUE("2022-03-31")

var g0 = SELECTCOLUMNS(FILTER(x1_contractual, DATEVALUE([lease end]) > wale_date)
, "WALE_start", wale_date
, "WALE_months", DATEDIFF(wale_date, DATEVALUE([lease end]), MONTH) 
, "WALE_area", [Unit size sqft]
, "WALE_contract", [Contract ID] 
, "split_region", [region] 
, "split_batch", [lease_start_y]  
, "split_tenant", [Tenant BBC] 
)

return g0

//-------------------- computing WALE and ALE
measure_ALE = AVERAGEX(A1_WALE_basis, [WALE_months])
measure_WALE = sumx(A1_WALE_basis, [WALE_area]*[WALE_months]) / sumx(A1_WALE_basis, [WALE_area])
measure_WALE_contracts = COUNTAX(GROUPBY(A1_WALE_basis, [WALE_contract]), [WALE_contract])


//-------------------- computing LOS and WALOS
A2_LOS_basis = 

var g1 = SELECTCOLUMNS(x1_contractual
, "LOS_months", [LOS]
, "LOS_weight", [Unit size sqft]
, "LOS_contract", [Contract ID]
, "split_tenant", [Tenant BBC]
, "split_region", [region]
, "split_cohort", [lease_start_ym]
, "split_batch", [lease_start_y]
)

return g1

//-------------------- adding measures for LOS
measure_ALOS = AVERAGEX(A2_LOS_basis, [LOS_months])
measure_WALOS = sumx(A2_LOS_basis, [LOS_months]*[LOS_weight]) / sumx(A2_LOS_basis, [LOS_weight]) 
measure_LOS_contracts = COUNTAX(GROUPBY(A2_LOS_basis, [LOS_contract]), [LOS_contract])


//--------------------
A3_MIMO_basis = 

var g1 = SELECTCOLUMNS(x1_contractual
, "time_ymd", [lease_end_ym]
, "split_name", "leaving"
, "MIMO_contract", [Contract ID]
, "split_region", [region]
, "split_tenant", [Tenant BBC]
)

var g2 = SELECTCOLUMNS(x1_contractual
, "time_ymd", [lease_start_ym]
, "split_name", "joining"
, "MIMO_contract", [Contract ID]
, "split_region", [region]
, "split_tenant", [Tenant BBC]
)

var u1 = ADDCOLUMNS(UNION(g1, g2)
, "time_y", LEFT([time_ymd], 4)
, "time_yq", FORMAT( DATEVALUE([time_ymd]), "yyyy-\QQ") 
)

return filter(u1, [time_y]<="2021")


//-------------------- measuring MIMO rates
measure_MIMO_contracts = 
var p1 = SELECTEDVALUE(A3_MIMO_basis[split_name])
var set1 = FILTER(A3_MIMO_basis, [split_name]=p1)
var s1 = COUNTAX(DISTINCT(SELECTCOLUMNS(set1, "abcd", [MIMO_contract])), [abcd])
return s1


//--------------------
//--------------------
//--------------------
//--------------------
//--------------------
//--------------------
//--------------------
//--------------------

